{
  "_args": [
    [
      {
        "raw": "lock@^0.1.2",
        "scope": null,
        "escapedName": "lock",
        "name": "lock",
        "rawSpec": "^0.1.2",
        "spec": ">=0.1.2 <0.2.0",
        "type": "range"
      },
      "C:\\Users\\Pulego-PC\\Documents\\FlatApp\\node_modules\\@exponent\\ngrok"
    ]
  ],
  "_from": "lock@>=0.1.2 <0.2.0",
  "_id": "lock@0.1.3",
  "_inCache": true,
  "_location": "/lock",
  "_nodeVersion": "6.2.0",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/lock-0.1.3.tgz_1471572688667_0.7340718908235431"
  },
  "_npmUser": {
    "name": "dominictarr",
    "email": "dominic.tarr@gmail.com"
  },
  "_npmVersion": "3.8.9",
  "_phantomChildren": {},
  "_requested": {
    "raw": "lock@^0.1.2",
    "scope": null,
    "escapedName": "lock",
    "name": "lock",
    "rawSpec": "^0.1.2",
    "spec": ">=0.1.2 <0.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@exponent/ngrok"
  ],
  "_resolved": "https://registry.npmjs.org/lock/-/lock-0.1.3.tgz",
  "_shasum": "f66c1caa0c41956e1426608039ed59b71bdf1854",
  "_shrinkwrap": null,
  "_spec": "lock@^0.1.2",
  "_where": "C:\\Users\\Pulego-PC\\Documents\\FlatApp\\node_modules\\@exponent\\ngrok",
  "author": {
    "name": "Dominic Tarr",
    "email": "dominic.tarr@gmail.com",
    "url": "http://dominictarr.com"
  },
  "bugs": {
    "url": "https://github.com/dominictarr/lock/issues"
  },
  "dependencies": {},
  "description": "lock asynchronous resources.",
  "devDependencies": {
    "tape": "~0.2.2"
  },
  "directories": {},
  "dist": {
    "shasum": "f66c1caa0c41956e1426608039ed59b71bdf1854",
    "tarball": "https://registry.npmjs.org/lock/-/lock-0.1.3.tgz"
  },
  "gitHead": "279b14c14ace0ffacc0939fdfa817a33794f7120",
  "homepage": "https://github.com/dominictarr/lock",
  "license": "MIT",
  "maintainers": [
    {
      "name": "dominictarr",
      "email": "dominic.tarr@gmail.com"
    }
  ],
  "name": "lock",
  "optionalDependencies": {},
  "readme": "# lock\n\nlock asynchronous resources.\n\n## Simple Example\n\n``` js\nvar Lock = require('lock')\nvar lock = Lock()\n\nlock('key', function (release) { //called when resource is available.\n\n  //do an async operation, and wrap the callback with release.\n  someAsyncOperation(args,..., release(function (err) {\n    //'key' is now unlocked!\n  })\n})\n```\n\n## Multiple Locks at Once.\n\n``` js\nvar Lock = require('lock')\nvar lock = Lock()\n\nlock(['A', 'B', 'C'], function (release) { //called, when ALL\n                                           //resources are available.\n\n  //do an async operation, and wrap the callback with release(cb)\n  someAsyncOperation(args,..., release(function (err) {\n    //A, B & C are now unlocked!\n  })\n})\n```\n\n## Lock with optional callback.\n\n``` js\nvar Lock = require('lock');\nvar lock = Lock();\n\nlock('cache', function(release) { //called when no one is writing to cache\n\t//we do not care if this fails since its a cache so no callback needed\n\tfs.writeFile(fileCache, ... , release())\n})\n```\n\nused in [level-update](https://github.com/dominictarr/level-update)\n\n## License\n\nMIT\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/dominictarr/lock.git"
  },
  "scripts": {
    "test": "set -e; for t in test/*.js; do node $t; done"
  },
  "version": "0.1.3"
}
