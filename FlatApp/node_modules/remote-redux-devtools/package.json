{
  "_args": [
    [
      {
        "raw": "remote-redux-devtools@^0.3.3",
        "scope": null,
        "escapedName": "remote-redux-devtools",
        "name": "remote-redux-devtools",
        "rawSpec": "^0.3.3",
        "spec": ">=0.3.3 <0.4.0",
        "type": "range"
      },
      "C:\\Users\\Pulego-PC\\Documents\\FlatApp"
    ]
  ],
  "_from": "remote-redux-devtools@>=0.3.3 <0.4.0",
  "_id": "remote-redux-devtools@0.3.4",
  "_inCache": true,
  "_location": "/remote-redux-devtools",
  "_nodeVersion": "5.8.0",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/remote-redux-devtools-0.3.4.tgz_1469002976819_0.35506887920200825"
  },
  "_npmUser": {
    "name": "zalmoxisus",
    "email": "zalmoxisus@gmail.com"
  },
  "_npmVersion": "3.7.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "remote-redux-devtools@^0.3.3",
    "scope": null,
    "escapedName": "remote-redux-devtools",
    "name": "remote-redux-devtools",
    "rawSpec": "^0.3.3",
    "spec": ">=0.3.3 <0.4.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/remote-redux-devtools/-/remote-redux-devtools-0.3.4.tgz",
  "_shasum": "60ff6080729281b986557dc9b102c6f7d588e269",
  "_shrinkwrap": null,
  "_spec": "remote-redux-devtools@^0.3.3",
  "_where": "C:\\Users\\Pulego-PC\\Documents\\FlatApp",
  "author": {
    "name": "Mihail Diordiev",
    "email": "zalmoxisus@gmail.com",
    "url": "https://github.com/zalmoxisus"
  },
  "bugs": {
    "url": "https://github.com/zalmoxisus/remote-redux-devtools/issues"
  },
  "dependencies": {
    "jsan": "^3.1.2",
    "querystring": "^0.2.0",
    "redux-devtools-instrument": "^1.1.0",
    "socketcluster-client": "^4.3.16"
  },
  "description": "Relay Redux actions to remote Redux DevTools.",
  "devDependencies": {
    "babel-cli": "^6.3.15",
    "babel-core": "^6.1.20",
    "babel-eslint": "^5.0.0-beta6",
    "babel-loader": "^6.2.0",
    "babel-preset-es2015-loose": "^6.1.3",
    "babel-preset-react": "^6.3.13",
    "babel-preset-stage-0": "^6.3.13",
    "eslint": "^1.10.3",
    "eslint-config-airbnb": "^2.1.1",
    "eslint-plugin-react": "^3.11.3",
    "expect": "^1.6.0",
    "mocha": "^2.2.5",
    "mocha-jsdom": "^1.0.0",
    "rimraf": "^2.3.4",
    "webpack": "^1.11.0"
  },
  "directories": {},
  "dist": {
    "shasum": "60ff6080729281b986557dc9b102c6f7d588e269",
    "tarball": "https://registry.npmjs.org/remote-redux-devtools/-/remote-redux-devtools-0.3.4.tgz"
  },
  "files": [
    "lib"
  ],
  "gitHead": "9ef1ff8cfa0d27ac5cbb030c8dae281d6b60aa3a",
  "homepage": "https://github.com/zalmoxisus/remote-redux-devtools",
  "keywords": [
    "redux",
    "devtools",
    "flux",
    "react",
    "hot reloading",
    "time travel",
    "live edit"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "zalmoxisus",
      "email": "zalmoxisus@gmail.com"
    }
  ],
  "name": "remote-redux-devtools",
  "optionalDependencies": {},
  "readme": "Remote Redux DevTools\n=====================\n\n![Demo](demo.gif)\n\nUse [Redux DevTools](https://github.com/gaearon/redux-devtools) remotely for React Native, hybrid, desktop and server side Redux apps.\n\n### Installation\n\n```\nnpm install --save-dev remote-redux-devtools\n```\n\n### Usage\n\nJust [add our store enhancer to your store](https://github.com/zalmoxisus/remote-redux-devtools/commit/eb18fc49e1f083a2330939af52da349b862f8df1):\n\n##### `store/configureStore.js`\n\n```js\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport devTools from 'remote-redux-devtools';\nimport reducer from '../reducers';\n\nexport default function configureStore(initialState) {\n  const enhancer = compose(\n    applyMiddleware(thunk),\n    devTools()\n  );\n  // Note: passing enhancer as last argument requires redux@>=3.1.0\n  return createStore(reducer, initialState, enhancer);\n}\n```\n\n### Remote monitoring\n\nUse one of [our monitor apps](https://github.com/zalmoxisus/remotedev-app) to inspect and dispatch actions:\n* [web](http://remotedev.io/local)\n* [redux-devtools-extension](https://github.com/zalmoxisus/redux-devtools-extension) - Click \"Remote\" button (or press [`Cmd+Ctrl+Arrow up`](https://github.com/zalmoxisus/redux-devtools-extension#keyboard-shortcuts)) to open remote monitoring.\n* [remotedev-extension](https://github.com/jhen0409/remotedev-extension) - Used in Electron/Browser DevTools panel.\n* [chrome app](https://chrome.google.com/webstore/detail/remotedev/faicmgpfiaijcedapokpbdejaodbelph).\n* [electron app](https://github.com/zalmoxisus/remotedev-app).\n* [remote-redux-devtools-on-debugger](https://github.com/jhen0409/remote-redux-devtools-on-debugger) - Used in React Native debugger as a dock monitor.\n* [atom-redux-devtools](https://github.com/zalmoxisus/atom-redux-devtools) - Used in Atom editor.\n* [redux-dispatch-cli](https://github.com/jhen0409/redux-dispatch-cli) - A CLI tool for Redux remote dispatch.\n\nUse [remotedev-app](https://github.com/zalmoxisus/remotedev-app) to create your own monitor app.\n\n### Communicate via local server\n\nIn order to make it simple to use, by default, the module and the monitor app communicate via [remotedev.io](http://remotedev.io) server. Use [remotedev-server](https://github.com/zalmoxisus/remotedev-server) cli to run it locally in order to make the connection faster and not to require an internet connection.\n\n\n### Parameters\n\nName                  | Description\n-------------         | -------------\n`name`                | *String* representing the instance name to be shown on the remote monitor.\n`realtime`            | *Boolean* specifies whether to allow remote monitoring. By default is `process.env.NODE_ENV === 'development'`. \n`hostname`            | *String* used to specify host for [`remotedev-server`](https://github.com/zalmoxisus/remotedev-server). If `port` is specified, default value is `localhost`.\n`port`                | *Number* used to specify host's port for [`remotedev-server`](https://github.com/zalmoxisus/remotedev-server).\n`secure`              | *Boolean* specifies whether to use `https` protocol for [`remotedev-server`](https://github.com/zalmoxisus/remotedev-server).\n`filters`             | *Map of arrays* named `whitelist` or `blacklist` to filter action types.\n`maxAge`              | *Number* of maximum allowed actions to be stored on the history tree, the oldest actions are removed once maxAge is reached. Default is `30`.\n`startOn`             | *String* or *Array of strings* indicating an action or a list of actions, which should start remote monitoring (when `realtime` is `false`). \n`stopOn`              | *String* or *Array of strings* indicating an action or a list of actions, which should stop remote monitoring. \n`sendOn`              | *String* or *Array of strings* indicating an action or a list of actions, which should trigger sending the history to the monitor (without starting it). *Note*: when using it, add a `fetch` polyfill if needed.\n`sendOnError`         | *Numeric* code: `0` - disabled (default), `1` - send all uncaught exception messages, `2` - send only reducers error messages.\n`sendTo`              | *String* url of the monitor to send the history when `sendOn` is triggered. By default is `${secure ? 'https' : 'http'}://${hostname}:${port}`.\n`id`                  | *String* to identify the instance when sending the history triggered by `sendOn`. You can use, for example, user id here, to know who sent the data.\n\nAll parameters are optional. You have to provide at least `port` property to use `localhost` instead of `remotedev.io` server.\n\nExample:\n```js\nexport default function configureStore(initialState) {\n  // Note: passing enhancer as last argument requires redux@>=3.1.0\n  return createStore(\n    rootReducer,\n    initialState,\n    devTools({\n      name: 'Android app', realtime: true,\n      hostname: 'localhost', port: 8000,\n      maxAge: 30, filters: { blacklist: ['EFFECT_RESOLVED'] }\n      })\n  );\n}\n```\n\n### Demo\n- [Toggle monitoring](http://zalmoxisus.github.io/monitoring/)\n\n### Examples\n- [Web](https://github.com/zalmoxisus/remote-redux-devtools/tree/master/examples)\n- [React Native](https://github.com/chentsulin/react-native-counter-ios-android)\n\n### License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/zalmoxisus/remote-redux-devtools.git"
  },
  "scripts": {
    "build": "babel src --out-dir lib",
    "build:examples": "babel-node examples/buildAll.js",
    "clean": "rimraf lib",
    "lint": "eslint src test",
    "prepublish": "npm run lint && npm run test && npm run clean && npm run build",
    "test": "NODE_ENV=test mocha --compilers js:babel-core/register --recursive",
    "test:watch": "NODE_ENV=test mocha --compilers js:babel-core/register --recursive --watch"
  },
  "version": "0.3.4"
}
